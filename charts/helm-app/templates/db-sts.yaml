apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "helm-app.fullname" . }}-db
spec:
  serviceName: {{ include "helm-app.fullname" . }}-db-headless
  replicas: 1
  selector:
    matchLabels:
     {{- include "helm-app.selectorLabels" . | nindent 6 }}
      app: pod-db
  template:   # A partir de aqui es la config de un pod
    metadata:
      labels:
       {{- include "helm-app.selectorLabels" . | nindent 8 }}
        app: pod-db
    spec:
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                    - app-wb
              topologyKey: "topology.kubernetes.io/hostname"
      containers:
      - name: db
        image: mysql:8.0
        envFrom:
        - configMapRef:
            name: {{ include "helm-app.fullname" . }}-db-config
        - secretRef:
            name: {{ include "helm-app.fullname" . }}-user-config
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: {{ include "helm-app.fullname" . }}-db-storage
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.volumeMount.name }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.volumeMount.storageClass | quote }}
      resources:
        requests:
          storage: {{ .Values.volumeMount.size }}

